# -*- coding: utf-8 -*-
"""Normalization.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ORV52GxzeuiZBVFF7kELoZ_qiBMUE0IJ
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv(r'D:\CODING_CODES\AIML\ML\Feature Engineering\Data\wine_data.csv',header=None,usecols=[0,1,2])
df.columns = ['Class label','Alcohol','Malic Acid']
print(df.head())

from sklearn.model_selection import train_test_split
X = df.drop('Class label',axis=1)
y = df['Class label']
X_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.2,random_state=24)

from sklearn.preprocessing import MinMaxScaler

scaler = MinMaxScaler()
scaler.fit(X_train)

X_train_scaled = scaler.transform(X_train)
X_test_scaled = scaler.transform(X_test)

print(type(X_train_scaled))

X_train_scaledDF = pd.DataFrame(X_train_scaled,columns=X_train.columns)
X_test_scaledDF = pd.DataFrame(X_test_scaled,columns=X_train.columns)

print(type(X_train_scaledDF))

print(X_train.describe())
print(X_train_scaledDF.describe())

'''
MinMaxScaler:  Xi' = Xi-Xmin/Xmax-Xmin  sklearn.preprocessing.MinMaxScaler
Mean Normalization: Xi' = Xi-Xmean/Xmax-Xmin  No class in sklearn
Max absolute scaling: Xi' = Xi/|Xmax|  sklearn.preprocessing.MaxAbsScaler
Robust scaling: Xi' = Xi - Xmedian/ IQR   IQR = InterQuartile Range = 75% - 25% sklearn.preprocessing.RobustScaler

MinMaxScaler is used when we know min and max values of our data
RobustScaler is used when data is sparse(mostly 0) and we need to handle outliers by reducing their effects
StandardScaler is used generally everywhere
'''

