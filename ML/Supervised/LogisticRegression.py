# -*- coding: utf-8 -*-
"""LogisticRegression.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1XG3rc_IZdus20h1cw7jRVne8In0Takvp
"""

import seaborn as sns
import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score
from sklearn.preprocessing import StandardScaler
import warnings
from sklearn.exceptions import ConvergenceWarning

df = sns.load_dataset('iris')

warnings.filterwarnings("ignore", category=ConvergenceWarning)

from sklearn.preprocessing import StandardScaler

print(df.sample(5))

print(df['species'].unique())

df = df[df['species']!='setosa']

print(df.sample(10))

# mapping for encoding species
df['species'] = df['species'].map({'virginica':0,'versicolor':1})


print(df.sample(10))

X = df.iloc[:,:-1]
y = df.iloc[:,-1]
X_train,X_test,y_train,y_test = train_test_split(X,y,test_size = 0.2, random_state= 4)

scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)

logistic_regressor = LogisticRegression(solver='saga', warm_start=True)

from sklearn.model_selection import GridSearchCV
parameters = {'penalty':['l1','l2'],'C':[1,2,3,4,5,10,20,30,40,50,60],'max_iter':[100,500,1000,2000,3000]}
classification_regressor = GridSearchCV(logistic_regressor,param_grid = parameters, scoring='accuracy',cv=5)

classification_regressor.fit(X_train,y_train)

print(classification_regressor.best_params_)

y_pred = classification_regressor.predict(X_test)

print(accuracy_score(y_test,y_pred))

