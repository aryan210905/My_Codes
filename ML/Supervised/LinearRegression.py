# -*- coding: utf-8 -*-
"""LinearRegression.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1sBRD3TbbbT-KdXl5R5M_e8YAsLKFtccW
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

df = pd.read_csv('/content/LinearRegression.csv')
print(df.head())

print(df.info())

print(df.isna().sum())

plt.scatter(df['cgpa'],df['package'])

X = df.iloc[:,0:1]
print(X.head())

y = df.iloc[:,-1]
print(y.head())

from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.2)

print(X_train)

print(y_train)

print(X_test)

print(y_test)

print(X_train.info())

print(X_test.info())

from sklearn.linear_model import LinearRegression

lr = LinearRegression()

lr.fit(X_train,y_train)

lr.predict(X_test.iloc[0].values.reshape(1,1))

print(y_test)

plt.scatter(df.iloc[:,0:1],df.iloc[:,-1])
plt.show()

plt.scatter(df.iloc[:,0:1],df.iloc[:,-1])
plt.plot(X_train,lr.predict(X_train),color='black')
plt.show()

print(lr.coef_) # slope

print(lr.intercept_)  # y intercept

from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score

print(lr.predict(X_test))

y_pred = lr.predict(X_test)

mae = mean_absolute_error(y_test,y_pred)    # (sum(|Yi-Ymean|))/n
print(mae)

mse = mean_squared_error(y_test,y_pred)     # (sum((Yi-Ymean)^2))/n
print(mse)

rmse = np.sqrt(mse)     # sqrt((sum((Yi-Ymean)^2))/n)
print(rmse)

r2 = r2_score(y_test,y_pred)    # 1 - (sum(Yi-Ypredictedi)/sum(Yi-Ymean))
print(r2)

