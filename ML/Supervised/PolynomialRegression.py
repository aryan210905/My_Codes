# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Ug0yLRQWKPuKTdg6dlj8IFVQ9b4gCsl9
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

df = pd.read_csv(r'D:\CODING_CODES\AIML\ML\Supervised\Data\polynomial_regression_data.csv')
print(df.head())

print(df.info())

plt.scatter(df['X'],df['y'])
plt.show()

# trying with Linear Regression first
from sklearn.linear_model import LinearRegression
lr = LinearRegression()

from sklearn.model_selection import train_test_split
X = df[['X']]
y = df['y']
X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.2,random_state=45)

print(X_train.info())

lr.fit(X_train,y_train)

lr.predict(X_test)

from sklearn.metrics import r2_score
y_pred = lr.predict(X_test)
r2 = r2_score(y_test,y_pred)
print(r2)

plt.scatter(df['X'],df['y'])
plt.plot(X_train,lr.predict(X_train))
plt.show()

from sklearn.preprocessing import PolynomialFeatures
poly = PolynomialFeatures(degree=2)

X_train_transform = poly.fit_transform(X_train)
X_test_transform = poly.transform(X_test)

print(X_test_transform)

print(X_train.iloc[0].values)
print(X_train_transform[0])

lr = LinearRegression()
lr.fit(X_train_transform,y_train)

y_pred_trans = lr.predict(X_test_transform)
print(y_pred_trans)

print(y_pred)

print(r2)

r2_trans = r2_score(y_test,y_pred_trans)
print(r2_trans)

print(lr.coef_)
print(lr.intercept_)

