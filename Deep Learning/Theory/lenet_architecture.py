# -*- coding: utf-8 -*-
"""Lenet-architecture.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1gUEFQ2Re3RWMV_mZuKUn3KC24C5dLBIO
"""

import tensorflow as tf
from tensorflow import keras
from keras import Sequential
from keras.layers import Conv2D, AveragePooling2D, Flatten, Dense
from keras.datasets import mnist
import numpy as np

(X_train,y_train),(X_test,y_test) = mnist.load_data()

# Expand dims to add channel: (28,28) -> (28,28,1)
X_train = np.expand_dims(X_train, axis=-1)
X_test = np.expand_dims(X_test, axis=-1)

# Resize to (32,32,1)
X_train = tf.image.resize(X_train, [32, 32]).numpy()
X_test = tf.image.resize(X_test, [32, 32]).numpy()

# Normalize pixel values to [0,1]
X_train = X_train / 255.0
X_test = X_test / 255.0

model = Sequential()

model.add(Conv2D(6,kernel_size=(5,5),activation='tanh',padding='valid',input_shape=(32,32,1)))
model.add(AveragePooling2D(pool_size=(2,2),strides=2,padding='valid'))

model.add(Conv2D(16,kernel_size=(5,5),activation='tanh',padding='valid'))
model.add(AveragePooling2D(pool_size=(2,2),strides=2,padding='valid'))

model.add(Flatten())

model.add(Dense(120,activation='tanh'))
model.add(Dense(84,activation='tanh'))
model.add(Dense(10,activation='softmax'))

model.summary()

model.compile(loss='sparse_categorical_crossentropy',optimizer='Adam',metrics=['accuracy'])

model.fit(X_train,y_train,epochs=100,batch_size=32,verbose=1,validation_data=(X_test,y_test))

